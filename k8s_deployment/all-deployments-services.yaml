# all-deployments-services.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: monitor-stock
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: nileshkishore/stock-backend:1
        ports:
        - containerPort: 8000
        env:
        - name: SYMBOLS
          value: "TCS.NS,SBIN.NS,RELIANCE.NS,BHARTIARTL.NS,LT.NS,INFY.NS,HDFCBANK.NS,WIPRO.NS,AAPL,MSFT"
        - name: DEBUG
          value: "1"
        - name: DB_HOST
          value: "db"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "first_database"
        - name: DB_USER
          value: "postgres_user"
        - name: DB_PASSWORD
          value: "1234"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: monitor-stock
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: nileshkishore/stock-frontend:1
        ports:
        - containerPort: 3000
        env:
        - name: NEXT_PUBLIC_API_URL
          value: "http://192.168.58.2:32000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  namespace: monitor-stock
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "first_database"
        - name: POSTGRES_USER
          value: "postgres_user"
        - name: POSTGRES_PASSWORD
          value: "1234"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitor-stock
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: prometheus-storage
          mountPath: /prometheus
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deployment
  namespace: monitor-stock
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: grafana-config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-config
        configMap:
          name: grafana-config
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-collector-deployment
  namespace: monitor-stock
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrics-collector
  template:
    metadata:
      labels:
        app: metrics-collector
    spec:
      containers:
      - name: metrics-collector
        image: nileshkishore/stock-metrics_collector:1
        ports:
        - containerPort: 7878
        env:
        - name: DEBUG
          value: "1"
        - name: DB_HOST
          value: "db"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "first_database"
        - name: DB_USER
          value: "postgres_user"
        - name: DB_PASSWORD
          value: "1234"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: monitor-stock
spec:
  type: NodePort
  selector:
    app: backend
  ports:
  - port: 8000
    targetPort: 8000
    nodePort: 32000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: monitor-stock
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 32001
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: monitor-stock
spec:
  type: NodePort
  selector:
    app: db
  ports:
  - port: 5432
    targetPort: 5432
    nodePort: 32002
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: monitor-stock
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
    nodePort: 32003
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: monitor-stock
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 32004
---
apiVersion: v1
kind: Service
metadata:
  name: metrics-collector-service
  namespace: monitor-stock
spec:
  type: NodePort
  selector:
    app: metrics-collector
  ports:
  - port: 7878
    targetPort: 7878
    nodePort: 32005
